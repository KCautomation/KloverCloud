{"name": "test_team", "status": "failed", "statusDetails": {"message": "AssertionError: assert False", "trace": "self = <test_namespace.NamespaceCreationOrganization testMethod=test_team>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_team(self):\n        # pytest.skip(\"Skipping test...later I will implement...\")\n        pageUrl = \"https://eks.alpha.klovercloud.io/\"\n        username = \"admin@klovercloud.com\"\n        password = \"Hello@123\"\n        Namespace_Name = \"test-26\"\n        driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()))\n        driver.maximize_window()\n        driver.get(pageUrl)\n        time.sleep(2)\n    \n        \"\"\" Login \"\"\"\n    \n        # try block to read URL\n        try:\n            html = urlopen(pageUrl)\n    \n        # except block to catch\n        # exception\n        # and identify error\n        except HTTPError as e:\n            print(Fore.LIGHTRED_EX + \"HTTP error\", e)\n    \n        except URLError as e:\n            print(Fore.LIGHTRED_EX + \"Opps ! Page not found!\", e)\n    \n        else:\n            print(Fore.YELLOW + 'Yeah ! URL found ')\n    \n        driver.get(pageUrl)\n        driver.implicitly_wait(20)\n        time.sleep(2)\n    \n        # put Email\n        try:\n            Email_box = WebDriverWait(driver, 20).until(\n                EC.element_to_be_clickable((By.XPATH, \"//input[@id='mat-input-0']\")))\n            print(\"Email_box is inputable\")\n            Email_box.send_keys(username)\n            time.sleep(2)\n        except NoSuchElementException as e:\n            print(\"NoSuchElementException error :\\n\", e, \"\\n\")\n        except TimeoutException as e:\n            print(\"TimeoutException error\", e)\n        else:\n            print('Successfully put email in Email_box')\n    \n        # put password\n        try:\n            Password_box = WebDriverWait(driver, 20).until(\n                EC.element_to_be_clickable((By.XPATH, \"//input[@id='mat-input-1']\")))\n            print(\"Password_box is inputable\")\n            Password_box.send_keys(password)\n            time.sleep(2)\n        except NoSuchElementException as e:\n            print(\"NoSuchElementException error :\\n\", e, \"\\n\")\n        except TimeoutException as e:\n            print(\"TimeoutException error\", e)\n        else:\n            print('Successfully put password in Password_box')\n    \n        # click on Toggle_Visibility_Button\n        try:\n            Toggle_Visibility_Button = WebDriverWait(driver, 20).until(\n                EC.element_to_be_clickable((By.XPATH,\n                                            \"/html/body/kc-root/kc-login/div/div[2]/div/form/div/mat-form-field[2]/div/div[1]/div[4]/button\")))\n            print(\"Toggle_Visibility_Button is clickable\")\n            Toggle_Visibility_Button.click()\n            time.sleep(1)\n            Toggle_Visibility_Button.click()\n            time.sleep(1)\n        except NoSuchElementException as e:\n            print(\"NoSuchElementException error\", e)\n        else:\n            print('Successfully showed & hided Password')\n        # Click on Sign In button\n    \n        try:\n            Sign_In_button = WebDriverWait(driver, 10).until(\n                EC.element_to_be_clickable(\n                    (By.XPATH, \"//body/kc-root[1]/kc-login[1]/div[1]/div[2]/div[1]/form[1]/button[1]/span[1]/div[1]\")))\n            print(\"Password_box is inputable\")\n            Sign_In_button.click()\n            driver.implicitly_wait(10)\n            time.sleep(7)\n        except NoSuchElementException as e:\n            print(\"NoSuchElementException error :\\n\", e, \"\\n\")\n        except TimeoutException as e:\n            print(\"TimeoutException error\", e)\n        except InvalidSessionIdException as e:\n            print(\"InvalidSessionIdException error\", e)\n        else:\n            print('Successfully click on Sign In button')\n    \n        # check error message have or not\n        try:\n            LogIn_Authentication_Error = WebDriverWait(driver, 10).until(\n                EC.presence_of_element_located((By.XPATH, \"//body[1]/kc-toastr[1]/div[1]/div[1]\")))\n            if LogIn_Authentication_Error.is_displayed():\n                print(\"\\n\")\n                print('Shown a error message: ',\n                      simple_colors.red(LogIn_Authentication_Error.text, ['bold', 'underlined']))\n                print(\"\\n\")\n                allure.attach(driver.get_screenshot_as_png(), name=\"test_login\", attachment_type=AttachmentType.PNG)\n>               assert False\nE               assert False\n\ntest_namespace.py:532: AssertionError"}, "attachments": [{"name": "test_login", "source": "fcc284a9-e4a3-4bc1-8b45-de4d0cf64aaf-attachment.png", "type": "image/png"}], "start": 1668570203440, "stop": 1668570230143, "uuid": "4ce9b571-c68e-4741-8f3f-2e3e46708ce4", "historyId": "944f2be0532fe3d879eb807976f8f31b", "testCaseId": "b539fb2e84a4e5fab4a39be3ebf7893d", "fullName": "test_namespace.NamespaceCreationOrganization#test_team", "labels": [{"name": "severity", "value": "critical"}, {"name": "suite", "value": "test_namespace"}, {"name": "subSuite", "value": "NamespaceCreationOrganization"}, {"name": "host", "value": "Klovercloud"}, {"name": "thread", "value": "13984-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_namespace"}]}